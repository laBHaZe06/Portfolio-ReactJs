{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Projets\\\\projet React\\\\AgenceDigital\\\\react-showcase\\\\src\\\\components\\\\ContactForm.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport emailjs from \"emailjs-com\";\n\nconst ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let nameS = document.getElementById(\"name\");\n    let emailS = document.getElementById(\"email\");\n    let messageS = document.getElementById(\"message\");\n    let formMess = document.querySelector(\".formMessage\");\n\n    const isEmail = () => {\n      let isMail = document.getElementById(\"not-mail\");\n      let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n      if (email.match(regex)) {\n        isMail.style.display = \"none\";\n        return true;\n      } else {\n        isMail.style.display = \"block\";\n        isMail.style.animation = \"dongle 1s\";\n        setTimeout(() => {\n          isMail.style.animation = \"none\";\n        }, 1000);\n        return false;\n      }\n    };\n\n    if (name && isEmail() && message) {\n      nameS.classList.remove(\"red\");\n      emailS.classList.remove(\"red\");\n      messageS.classList.remove(\"red\");\n      formMess.innerHTML = \"Message en cours d'envoi...\";\n      formMess.style.background = \"#00c1ec\";\n      formMess.style.opacity = \"1\"; // voir doc : https://www.emailjs.com/docs/examples/reactjs/\n\n      emailjs.send( // your service ID\n      \"service_sr9mzsh\", // your template ID\n      \"template_nr47kdn\", {\n        name,\n        email,\n        message\n      }, // your user ID (protégé par .env)\n      process.env.REACT_APP_EMAILJS_KEY).then(() => {\n        formMess.innerHTML = \"Message envoyé ! Je vous recontacterai dès que possible.\";\n        document.getElementById(\"name\").classList.remove(\"error\");\n        document.getElementById(\"email\").classList.remove(\"error\");\n        document.getElementById(\"message\").classList.remove(\"error\");\n        setName(\"\");\n        setEmail(\"\");\n        setMessage(\"\");\n        setTimeout(() => {\n          formMess.style.opacity = \"0\";\n        }, 5000);\n      }, err => {\n        console.log(err);\n        formMess.style.background = \"rgb(253, 87, 87)\";\n        formMess.innerHTML = \"Une erreur s'est produite, veuillez réessayer.\";\n      });\n    } else {\n      formMess.innerHTML = \"Merci de remplir correctement les champs requis *\";\n      formMess.style.background = \"rgb(253, 87, 87)\";\n      formMess.style.opacity = \"1\";\n\n      if (!name) {\n        nameS.classList.add(\"error\");\n      }\n\n      if (!email) {\n        emailS.classList.add(\"error\");\n      }\n\n      if (!message) {\n        messageS.classList.add(\"error\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"contact-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Contactez-moi\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    required: true,\n    onChange: e => setName(e.target.value),\n    placeholder: \"nom *\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"email-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"not-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Email non valide\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"mail\",\n    id: \"email\",\n    name: \"email\",\n    required: true,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"email *\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"message\",\n    name: \"message\",\n    onChange: e => setMessage(e.target.value),\n    placeholder: \"message *\",\n    value: message,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formButton hover\",\n    type: \"submit\",\n    value: \"envoyer\",\n    onClick: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/wamp64/www/Projets/projet React/AgenceDigital/react-showcase/src/components/ContactForm.js"],"names":["React","useState","emailjs","ContactForm","name","setName","email","setEmail","message","setMessage","handleSubmit","e","preventDefault","nameS","document","getElementById","emailS","messageS","formMess","querySelector","isEmail","isMail","regex","match","style","display","animation","setTimeout","classList","remove","innerHTML","background","opacity","send","process","env","REACT_APP_EMAILJS_KEY","then","err","console","log","add","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let nameS = document.getElementById(\"name\");\r\n    let emailS = document.getElementById(\"email\");\r\n    let messageS = document.getElementById(\"message\");\r\n    let formMess = document.querySelector(\".formMessage\");\r\n\r\n    const isEmail = () => {\r\n      let isMail = document.getElementById(\"not-mail\");\r\n      let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n\r\n      if (email.match(regex)) {\r\n        isMail.style.display = \"none\";\r\n        return true;\r\n      } else {\r\n        isMail.style.display = \"block\";\r\n        isMail.style.animation = \"dongle 1s\";\r\n        setTimeout(() => {\r\n          isMail.style.animation = \"none\";\r\n        }, 1000);\r\n        return false;\r\n      }\r\n    };\r\n\r\n    if (name && isEmail() && message) {\r\n      nameS.classList.remove(\"red\");\r\n      emailS.classList.remove(\"red\");\r\n      messageS.classList.remove(\"red\");\r\n\r\n      formMess.innerHTML = \"Message en cours d'envoi...\";\r\n      formMess.style.background = \"#00c1ec\";\r\n      formMess.style.opacity = \"1\";\r\n\r\n      // voir doc : https://www.emailjs.com/docs/examples/reactjs/\r\n      emailjs\r\n        .send(\r\n          // your service ID\r\n          \"service_sr9mzsh\",\r\n          // your template ID\r\n          \"template_nr47kdn\",\r\n          {\r\n            name,\r\n            email,\r\n            message,\r\n          },\r\n          // your user ID (protégé par .env)\r\n          process.env.REACT_APP_EMAILJS_KEY\r\n        )\r\n        .then(\r\n          () => {\r\n            formMess.innerHTML =\r\n              \"Message envoyé ! Je vous recontacterai dès que possible.\";\r\n\r\n            document.getElementById(\"name\").classList.remove(\"error\");\r\n            document.getElementById(\"email\").classList.remove(\"error\");\r\n            document.getElementById(\"message\").classList.remove(\"error\");\r\n            setName(\"\");\r\n            setEmail(\"\");\r\n            setMessage(\"\");\r\n\r\n            setTimeout(() => {\r\n              formMess.style.opacity = \"0\";\r\n            }, 5000);\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            formMess.style.background = \"rgb(253, 87, 87)\";\r\n            formMess.innerHTML =\r\n              \"Une erreur s'est produite, veuillez réessayer.\";\r\n          }\r\n        );\r\n    } else {\r\n      formMess.innerHTML = \"Merci de remplir correctement les champs requis *\";\r\n      formMess.style.background = \"rgb(253, 87, 87)\";\r\n      formMess.style.opacity = \"1\";\r\n\r\n      if (!name) {\r\n        nameS.classList.add(\"error\");\r\n      }\r\n      if (!email) {\r\n        emailS.classList.add(\"error\");\r\n      }\r\n      if (!message) {\r\n        messageS.classList.add(\"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"contact-form\">\r\n      <h3>Contactez-moi</h3>\r\n      <div className=\"form-content\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"nom *\"\r\n          value={name}\r\n        />\r\n        <div className=\"email-content\">\r\n          <label id=\"not-mail\">Email non valide</label>\r\n          <input\r\n            type=\"mail\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            required\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"email *\"\r\n            value={email}\r\n          />\r\n        </div>\r\n        <textarea\r\n          id=\"message\"\r\n          name=\"message\"\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"message *\"\r\n          value={message}\r\n          required\r\n        />\r\n      </div>\r\n      <input\r\n        className=\"formButton hover\"\r\n        type=\"submit\"\r\n        value=\"envoyer\"\r\n        onClick={(e) => handleSubmit(e)}\r\n      />\r\n      <div className=\"formMessage\"></div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}